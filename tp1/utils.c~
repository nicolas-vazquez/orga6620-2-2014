#include "utils.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>


void print_entro_loop1(){
	printf("entro loop 1\n");

}

void print_entro_loop1_parser(){
	printf("entro loop 1 parser\n");
}

void print_entro_loop2(){
	printf("entro loop 2\n");
}

void print_sale_loop(){
	printf("sale loop\n");
}

void print_enc_tag(){
	printf("encontre tag\n");
}

void print_num(int num){
	printf("%d\n", num);
}

void printll(){
	printf("llega111\n");
}

void print(char* s, int n){
	//printf("voy a imprimr\n");
	fwrite(s,sizeof(char),n,stdout);
	printf("\n");


}

int is_begin_tag(char* newtag, int newtag_l){
	if(newtag[0] != '/'){
		return 0;
	}
	return 1;
}

int compare_tags(char* oldtag, int oldtag_length, char* newtag, int newtag_length){
	if(newtag_length != oldtag_length+1){
		return 0;
	}else{
		
		int i = !memcmp(oldtag, (newtag + 1), oldtag_length);
		return i;
	}
}

char* copy_tag(char* _tag, int _tag_len) {
    int i;

    char* tag1 = malloc(sizeof(char) * (_tag_len + 1));

    for (i = 0; i < _tag_len; i++, _tag++) {
        tag1[i] = *_tag;
    }

    tag1[i] = '\0';

    return tag1;
}

char* create_message(int res, char* tag1, int tag1_len, char* tag2, int tag2_len, int* line){	
	char* tag1 = copy_tag(_old, _old_len);
	char* tag2 = copy_tag(_new, _new_len);
        printf("Error!\n");

	switch (res) {
		case 0:
		        sprintf(errmsg, "Error en línea %d: El tag %s no ha sido abierto", *line, tag2);
        		free(tag2);
        		break;
        	case 1:
        	        sprintf(errmsg, "Error en línea %d: El tag %s no se ha cerrado", *line, tag1);
     		        free(tag1);
     		        break;
     	        case 2:
           		sprintf(errmsg, "Error en línea %d: %s cerrado antes que %s", *line, tag2, tag1);
         		free(tag1);
         		free(tag2);
         		break;
	}
	return errmsg;
	

}

int foo(char* file, int* line, char* oldtag, int* oldtag_length){
	printf("%s\n", file);
	printf("llega\n");
	printf("line: %d\n", *line);
	(*line)++;
	return 0;	
}
